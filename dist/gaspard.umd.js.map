{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///gaspard.umd.js","webpack:///webpack/bootstrap 28825ceeef08e6424b46","webpack:///./src/utils.js","webpack:///./src/attributes.js","webpack:///./src/content.js","webpack:///./src/effects.js","webpack:///./src/events.js","webpack:///./src/selectors.js","webpack:///./src/positions.js","webpack:///./src/gaspard.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","toCamelCase","kebabCaseString","split","reduce","memo","token","slice","toUpperCase","_toConsumableArray","arr","Array","isArray","arr2","length","from","getRealClassNamesArray","arguments","undefined","filter","className","hasClass","element","classList","contains","indexOf","attributes_addClass","classNames","_element$classList","add","apply","join","attributes_removeClass","_element$classList2","remove","accumulator","replace","RegExp","trim","attributes_toggleClass","state","forEach","attributes_attr","attribute","value","getAttribute","removeAttribute","setAttribute","attributes_css","ruleName","getComputedStyle","style","parseHTML","htmlString","tmp","document","implementation","createHTMLDocument","body","innerHTML","children","content_before","insertAdjacentHTML","content_after","content_prepend","parent","insertBefore","firstChild","content_append","appendChild","clone","cloneNode","content_remove","parentNode","removeChild","content_text","textString","textContent","String","content_html","content_replaceWith","outerHTML","fade","tick","timeDifference","Date","last","isFadeIn","opacity","duration","window","requestAnimationFrame","setTimeout","effects_fadeIn","effects_fadeOut","effects_hide","display","effects_show","events_off","eventName","eventHandler","removeEventListener","events_on","addEventListener","events_trigger","data","isNativeEvent","event","CustomEvent","detail","createEvent","initCustomEvent","dispatchEvent","documentReady","callback","attachEvent","readyState","selectors__toConsumableArray","selectors_find","selector","context","Element","HTMLDocument","TypeError","elements","test","getElementById","substr","getElementsByClassName","getElementsByTagName","querySelectorAll","is","selectorOrElement","matches","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","child","prev","previousElementSibling","next","nextElementSibling","siblings","concat","_classCallCheck","instance","Constructor","viewportPosition","getBoundingClientRect","offset","rect","top","scrollTop","left","scrollLeft","position","offsetLeft","offsetTop","outerHeight","withMargin","height","offsetHeight","parseInt","marginTop","marginBottom","outerWidth","width","offsetWidth","marginLeft","marginRight","_createClass","defineProperties","target","props","descriptor","writable","key","protoProps","staticProps","gaspard_GaspardElements","GaspardElements","contextElements","method","_len","params","_key","each","map","push","gaspard_defaultExport"],"mappings":"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","file":"gaspard.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"gaspard\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"common-gaspard\"] = factory();\n\telse\n\t\troot[\"Gaspard\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/*! gaspard | (c) 2017  Luca Perret <perret.luca@gmail.com> | MIT | https://github.com/lucaperret/gaspard */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"gaspard\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"common-gaspard\"] = factory();\n\telse\n\t\troot[\"Gaspard\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// CONCATENATED MODULE: ./src/utils.js\n/***\n * Utils Module\n * @module utils\n * @private\n */\n\n/**\n * Transform kebab case string into camel case strings array\n * @private\n *\n * @param {string} kebabCaseString The kebab case string\n * @return {string} The camel case transformed string\n */\nfunction toCamelCase(kebabCaseString) {\n  return kebabCaseString.split('-').reduce(function (memo, token) {\n    return memo + token.slice(0, 1).toUpperCase() + token.slice(1);\n  });\n}\n// CONCATENATED MODULE: ./src/attributes.js\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/***\n * Attributes Module\n * @module attributes\n */\n\n\n\n/**\n * Filter incorrect class names.\n * @private\n *\n * @param {string} [classNames=''] One or more space-separated classes to be filtered\n * @return {Array} Valid class names array\n */\nfunction getRealClassNamesArray() {\n  var classNames = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  return classNames.split(' ').filter(function (className) {\n    return !!className;\n  });\n}\n\n/**\n * Determine whether the element is assigned the given class.\n *\n * @param {Element} element A DOM node\n * @param {string} className The class name to search for\n * @return {boolean} Result\n */\nfunction hasClass(element, className) {\n  if (element.classList) {\n    return element.classList.contains(className);\n  } else {\n    return !!~element.className.indexOf(className);\n  }\n}\n\n/**\n * Adds the specified class(es) to element.\n *\n * @param {Element} element A DOM node\n * @param {string} classNames One or more space-separated classes to be added to the class attribute\n */\nfunction attributes_addClass(element, classNames) {\n  classNames = getRealClassNamesArray(classNames);\n  if (element.classList) {\n    var _element$classList;\n\n    (_element$classList = element.classList).add.apply(_element$classList, _toConsumableArray(classNames));\n  } else {\n    element.className += ' ' + classNames.join(' ');\n  }\n}\n\n/**\n * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\n *\n * @param {Element} element A DOM node\n * @param {string} classNames One or more space-separated classes to be removed to the class attribute\n */\nfunction attributes_removeClass(element, classNames) {\n  classNames = getRealClassNamesArray(classNames);\n  if (element.classList) {\n    var _element$classList2;\n\n    (_element$classList2 = element.classList).remove.apply(_element$classList2, _toConsumableArray(classNames));\n  } else {\n    element.className = classNames.reduce(function (accumulator, className) {\n      return accumulator.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n    }, element.className).trim();\n  }\n}\n\n/**\n * Add or remove one or more classes from element, depending on either the class's presence or the value of the state argument.\n *\n * @param {Element} element A DOM node\n * @param {string} classNames One or more class names (separated by spaces) to be toggled for each element in the matched set\n * @param {boolean} state A Boolean value to determine whether the class should be added or removed\n */\nfunction attributes_toggleClass(element, classNames, state) {\n  if (typeof state === 'boolean') {\n    if (state) {\n      attributes_addClass(element, classNames);\n    } else {\n      attributes_removeClass(element, classNames);\n    }\n  } else {\n    classNames = getRealClassNamesArray(classNames);\n    classNames.forEach(function (className) {\n      return hasClass(element, className) ? attributes_removeClass(element, className) : attributes_addClass(element, className);\n    });\n  }\n}\n\n/**\n * Get the value of an attribute for the element\n *\n * @param {Element} element A DOM node\n * @param {string} attribute The name of the attribute to get\n * @return {string} The value of the attribute\n */\n/**\n * Set the value of an attribute for the element.\n *\n * @param {Element} element A DOM node\n * @param {string} attribute The name of the attribute to set\n * @param {string} [value] A value to set for the attribute. If null, the specified attribute will be removed\n */\nfunction attributes_attr(element, attribute, value) {\n  if (value !== undefined) {\n    if (value === null) {\n      element.removeAttribute(attribute);\n    } else {\n      element.setAttribute(attribute, value);\n    }\n  } else {\n    return element.getAttribute(attribute);\n  }\n}\n\n/**\n * Get the computed style properties for the element.\n *\n * @param {Element} element A DOM node\n * @param {string} ruleName A CSS property\n * @return {string} The value of the CSS property\n */\n/**\n  * Set a CSS property for the element.\n  *\n  * @param {Element} element A DOM node\n  * @param {string} ruleName A CSS property\n  * @param {string} [value] A value to set for the property\n  */\nfunction attributes_css(element, ruleName, value) {\n  if (value !== undefined) {\n    element.style[toCamelCase(ruleName)] = value;\n  } else {\n    return getComputedStyle(element)[ruleName];\n  }\n}\n// CONCATENATED MODULE: ./src/content.js\n/***\n * Content Module\n * @module content\n */\n\n/**\n * Parses a string into an array of DOM nodes.\n *\n * @param {string} htmlString HTML string to be parsed\n * @return {Element[]} DOM nodes\n */\nfunction parseHTML(htmlString) {\n  var tmp = document.implementation.createHTMLDocument();\n  tmp.body.innerHTML = htmlString;\n  return tmp.body.children;\n}\n\n/**\n * Insert content, specified by the second parameter, before the element.\n *\n * @param {Element} element A DOM node\n * @param {string} htmlString HTML string to insert\n */\nfunction content_before(element, htmlString) {\n  element.insertAdjacentHTML('beforebegin', htmlString);\n}\n\n/**\n * Insert content, specified by the second parameter, after the element.\n *\n * @param {Element} element A DOM node\n * @param {string} htmlString HTML string to insert\n */\nfunction content_after(element, htmlString) {\n  element.insertAdjacentHTML('afterend', htmlString);\n}\n\n/**\n * Insert an element, specified by the second parameter, to the beginning of the parent element.\n *\n * @param {Element} parent Parent DOM element\n * @param {Element} element DOM element to insert\n */\nfunction content_prepend(parent, element) {\n  parent.insertBefore(element, parent.firstChild);\n}\n\n/**\n * Insert an element, specified by the second parameter, to the end of the parent element.\n *\n * @param {Element} parent Parent DOM element\n * @param {Element} element DOM element to insert\n */\nfunction content_append(parent, element) {\n  parent.appendChild(element);\n}\n\n/**\n * Create a deep copy of the element.\n *\n * @param {Element} element A DOM node\n * @return {Element} Cloned DOM Element\n */\nfunction clone(element) {\n  return element.cloneNode(true);\n}\n\n/**\n * Remove the element from the DOM\n *\n * @param {Element} element The element to remove\n */\nfunction content_remove(element) {\n  element.parentNode.removeChild(element);\n}\n\n/**\n * Get the combined text contents of the element, including his descendants.\n *\n * @param {Element} element A DOM node\n * @return {string}\n */\n/**\n  * Set the content of the element to the specified text.\n  *\n  * @param {Element} element A DOM node\n  * @param {string} textString The text to set as the content of the element. When Number or Boolean is supplied, it will be converted to a String representation.\n  */\nfunction content_text(element, textString) {\n  if (textString !== undefined) {\n    element.textContent = String(textString);\n  } else {\n    return element.textContent;\n  }\n}\n\n/**\n * Get the HTML contents of the element.\n *\n * @param {Element} element A DOM node\n * @return {string}\n */\n/**\n  * Set the HTML contents of the element.\n  *\n  * @param {Element} element A DOM node\n  * @param {string} htmlString A string of HTML to set as the content\n  */\nfunction content_html(element, htmlString) {\n  if (htmlString !== undefined) {\n    element.innerHTML = htmlString;\n  } else {\n    return element.innerHTML;\n  }\n}\n\n/**\n * Replace element with the provided new content.\n *\n * @param {Element} element A DOM node\n * @param {string} htmlString The HTML string content to insert\n */\nfunction content_replaceWith(element, htmlString) {\n  element.outerHTML = htmlString;\n}\n// CONCATENATED MODULE: ./src/effects.js\n/***\n * Effects Module\n * @module effects\n */\n\n/**\n * Fade in or out the element.\n * @private\n *\n * @param {Element} element A DOM node\n * @param {number} [duration=400] A number determining how long the animation will run\n * @param {boolean} isFadeIn Determine fadeIn or fadeOut\n */\nfunction fade(element) {\n  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;\n  var isFadeIn = arguments[2];\n\n  element.style.opacity = isFadeIn ? 0 : 1;\n\n  var last = +new Date();\n  function tick() {\n    var timeDifference = (new Date() - last) * (isFadeIn ? 1 : -1);\n    element.style.opacity = +element.style.opacity + timeDifference / duration;\n    last = +new Date();\n\n    var targetOpacity = isFadeIn ? +element.style.opacity < 1 : +element.style.opacity > 0;\n    if (targetOpacity) {\n      window.requestAnimationFrame && requestAnimationFrame(tick) || setTimeout(tick, 16);\n    }\n  }\n\n  tick();\n}\n\n/**\n * Display the elements by fading them to opaque.\n *\n * @param {Element} element A DOM node\n * @param {number} [duration=400] A number determining how long the animation will run\n */\nfunction effects_fadeIn(element, duration) {\n  fade(element, duration, true);\n}\n\n/**\n * Hide the element by fading them to transparent.\n *\n * @param {Element} element A DOM node\n * @param {number} [duration=400] A number determining how long the animation will run\n */\nfunction effects_fadeOut(element, duration) {\n  fade(element, duration, false);\n}\n\n/**\n * Hide the element.\n *\n * @param {Element} element A DOM node\n */\nfunction effects_hide(element) {\n  element.style.display = 'none';\n}\n\n/**\n * Show the element.\n *\n * @param {Element} element A DOM node\n */\nfunction effects_show(element) {\n  element.style.display = '';\n}\n// CONCATENATED MODULE: ./src/events.js\n/***\n * Events Module\n * @module events\n */\n\n/**\n * Remove an event handler.\n *\n * @param {Element} element A DOM node\n * @param {string} eventName An event type\n * @param {Function} eventHandler A handler function previously attached for the event\n */\nfunction events_off(element, eventName, eventHandler) {\n  element.removeEventListener(eventName, eventHandler);\n}\n\n/**\n * Attach an event handler function for the element.\n *\n * @param {Element} element A DOM node\n * @param {string} eventName An event type\n * @param {Function} eventHandler A function to execute when the event is triggered\n */\nfunction events_on(element, eventName, eventHandler) {\n  element.addEventListener(eventName, eventHandler);\n}\n\n/**\n * Execute all handlers and behaviors attached to the element for the given event type.\n *\n * @param {Element} element A DOM node\n * @param {string} eventName An event type\n * @param {Object} [data={}] Additional parameters to pass along to the event handler.\n */\nfunction events_trigger(element, eventName) {\n  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var isNativeEvent = !!element['on' + eventName];\n  var event = void 0;\n  if (window.CustomEvent) {\n    event = new CustomEvent(eventName, { detail: data });\n  } else {\n    event = document.createEvent('CustomEvent');\n    event.initCustomEvent(eventName, true, !isNativeEvent, data);\n  }\n  element.dispatchEvent(event);\n}\n\n/**\n * Specify a function to execute when the DOM is fully loaded.\n *\n * @param {Function} callback A function to execute after the DOM is ready.\n */\nfunction documentReady(callback) {\n  if (document.attachEvent ? document.readyState === 'complete' : document.readyState !== 'loading') {\n    callback();\n  } else {\n    document.addEventListener('DOMContentLoaded', callback);\n  }\n}\n// CONCATENATED MODULE: ./src/selectors.js\nfunction selectors__toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/***\n * Selectors Module\n * @namespace selectors\n */\n\n/**\n * Return a collection of matched elements either found in the DOM based on passed argument\n *\n * @param {string} selector Accepts a string containing a CSS selector which is then used to match a set of elements\n * @param {(HTMLDocument|Element)} [context=document] A DOM Element or Document\n * @return {Array} A collection of DOM Elements\n */\nfunction selectors_find(selector) {\n  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;\n\n  if (context instanceof Element === false && context instanceof HTMLDocument === false) {\n    throw new TypeError('You should provide a valid dom node as second argument');\n  }\n  var elements = void 0;\n  if (/^#[\\w-]*$/.test(selector)) {\n    elements = document.getElementById(selector.substr(1)) || [];\n  } else if (/^\\.[\\w-]*$/.test(selector)) {\n    elements = context.getElementsByClassName(selector.slice(1));\n  } else if (/^\\w+$/.test(selector)) {\n    elements = context.getElementsByTagName(selector);\n  } else {\n    elements = context.querySelectorAll(selector);\n  }\n  if (elements.length) {\n    elements = [].concat(selectors__toConsumableArray(elements));\n  }\n  return elements;\n}\n\n/**\n * Check the element against a selector or element, and return true if the element match the given argument.\n *\n * @param {Element} element A DOM node\n * @param {(string|Element)} selectorOrElement A string containing a selector expression or a DOM node\n * @return {boolean} Is element match with selectorOrElement\n */\nfunction is(element, selectorOrElement) {\n  if (typeof selectorOrElement === 'string') {\n    return (element.matches || element.matchesSelector || element.msMatchesSelector || element.mozMatchesSelector || element.webkitMatchesSelector || element.oMatchesSelector).call(element, selectorOrElement);\n  } else {\n    return element === selectorOrElement;\n  }\n}\n\n/**\n * Check to see if a DOM element is a descendant of another DOM element.\n *\n * @param {Element} element A DOM node\n * @param {Element} child A potential child DOM node\n * @return {boolean} Is element has child as a descendant\n */\nfunction contains(element, child) {\n  return element !== child && element.contains(child);\n}\n\n/**\n * Get the immediately preceding sibling of the element.\n *\n * @param {Element} element A DOM node\n * @return {Element} The previous DOM node\n */\nfunction prev(element) {\n  return element.previousElementSibling;\n}\n\n/**\n * Get the immediately following sibling of the element.\n *\n * @param {Element} element A DOM node\n * @return {Element} The following DOM node\n */\nfunction next(element) {\n  return element.nextElementSibling;\n}\n\n/**\n * Get the siblings of the element.\n *\n * @param {Element} element A DOM node\n * @return {Array} Siblings DOM nodes\n */\nfunction siblings(element) {\n  return [].concat(selectors__toConsumableArray(element.parentNode.children)).filter(function (child) {\n    return child !== element;\n  });\n}\n\n/**\n * Get the parent of the element.\n *\n * @param {Element} element A DOM node\n * @return {Element} The parent DOM node\n */\nfunction parent(element) {\n  return element.parentNode;\n}\n// CONCATENATED MODULE: ./src/gaspard.js\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/***\n * GaspardElements Module\n * @module gaspardElements\n */\n\n\n\n\n\n\n\n/**\n * Use GaspardElements class to perform actions on Elements collection\n *\n * @param {(Element[]|Element|string)} [elements=[]] DOM Elements, Element, or string to query the DOM\n * @return {GaspardElements} Gaspard Elements collection\n */\n\nvar gaspard_GaspardElements = function () {\n  function GaspardElements() {\n    var elements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, GaspardElements);\n\n    var contextElements = void 0;\n    if (Array.isArray(elements)) {\n      contextElements = elements;\n    } else if (typeof elements === 'string') {\n      contextElements = selectors_find(elements);\n    } else {\n      contextElements = [elements];\n    }\n    this.elements = [].concat(contextElements);\n  }\n  /**\n   * Apply a method on each elements and return the collection to chain methods\n   * @param {Function} method Accept a method to run on each elements\n   * @param {any} params A list of argument to call the method with\n   * @return {GaspardElements} Gaspard Elements collection\n   */\n\n\n  _createClass(GaspardElements, [{\n    key: 'each',\n    value: function each(method) {\n      for (var _len = arguments.length, params = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        params[_key - 1] = arguments[_key];\n      }\n\n      this.elements.forEach(function (element) {\n        return method.apply(undefined, [element].concat(params));\n      });\n      return this;\n    }\n    /**\n     * Add classes to each elements\n     * @see {@link addClass}\n     * @param {string} classNames\n     * @return {GaspardElements} Gaspard Elements collection\n     */\n\n  }, {\n    key: 'addClass',\n    value: function addClass(classNames) {\n      return this.each(attributes_addClass, classNames);\n    }\n    /**\n     * Toggle classes to each elements\n     * @see {@link toggleClass}\n     * @param {string} classNames\n     * @param {boolean} state\n     * @return {GaspardElements} Gaspard Elements collection\n     */\n\n  }, {\n    key: 'toggleClass',\n    value: function toggleClass(classNames, state) {\n      return this.each(attributes_toggleClass, classNames, state);\n    }\n    /**\n     * Remove classes to each elements\n     * @see {@link removeClass}\n     * @param {string} classNames\n     * @return {GaspardElements} Gaspard Elements collection\n     */\n\n  }, {\n    key: 'removeClass',\n    value: function removeClass(classNames) {\n      return this.each(attributes_removeClass, classNames);\n    }\n    /**\n     * Set attribute to each elements\n     * @see {@link attr}\n     * @param {string} attribute\n     * @param {any} value\n     * @return {GaspardElements} Gaspard Elements collection\n     */\n\n  }, {\n    key: 'attr',\n    value: function attr(attribute, value) {\n      return this.each(attributes_attr, attribute, value);\n    }\n    /**\n     * Set CSS value to each elements\n     * @see {@link css}\n     * @param {string} ruleName\n     * @param {string} value\n     * @return {GaspardElements} Gaspard Elements collection\n     */\n\n  }, {\n    key: 'css',\n    value: function css(ruleName, value) {\n      return this.each(attributes_css, ruleName, value);\n    }\n    /**\n     * Insert content before each elements\n     * @see {@link before}\n     * @param {string} htmlString\n     * @return {GaspardElements} Gaspard Elements collection\n     */\n\n  }, {\n    key: 'before',\n    value: function before(htmlString) {\n      return this.each(content_before, htmlString);\n    }\n    /**\n     * Insert content after each elements\n     * @see {@link after}\n     * @param {string} htmlString\n     * @return {GaspardElements} Gaspard Elements collection\n     */\n\n  }, {\n    key: 'after',\n    value: function after(htmlString) {\n      return this.each(content_after, htmlString);\n    }\n    /**\n     * Prepend element to each elements\n     * @see {@link prepend}\n     * @param {Element} element\n     * @return {GaspardElements} Gaspard Elements collection\n     */\n\n  }, {\n    key: 'prepend',\n    value: function prepend(element) {\n      return this.each(content_prepend, element);\n    }\n    /**\n     * Append element to each elements\n     * @see {@link append}\n     * @param {Element} element\n     * @return {GaspardElements} Gaspard Elements collection\n     */\n\n  }, {\n    key: 'append',\n    value: function append(element) {\n      return this.each(content_append, element);\n    }\n    /**\n     * Remove each elements\n     * @see {@link remove}\n     * @return {GaspardElements} Gaspard Elements collection\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      return this.each(content_remove);\n    }\n    /**\n     * Set text to each elements\n     * @see {@link text}\n     * @param {string} textString\n     * @return {GaspardElements} Gaspard Elements collection\n     */\n\n  }, {\n    key: 'text',\n    value: function text(textString) {\n      return this.each(content_text, textString);\n    }\n    /**\n     * Set html to each elements\n     * @see {@link html}\n     * @param {string} htmlString\n     * @return {GaspardElements} Gaspard Elements collection\n     */\n\n  }, {\n    key: 'html',\n    value: function html(htmlString) {\n      return this.each(content_html, htmlString);\n    }\n    /**\n     * Replace each elements\n     * @see {@link replaceWith}\n     * @param {string} htmlString\n     * @return {GaspardElements} Gaspard Elements collection\n     */\n\n  }, {\n    key: 'replaceWith',\n    value: function replaceWith(htmlString) {\n      return this.each(content_replaceWith, htmlString);\n    }\n    /**\n     * Fade in each elements\n     * @see {@link fadeIn}\n     * @param {number} duration\n     * @return {GaspardElements} Gaspard Elements collection\n     */\n\n  }, {\n    key: 'fadeIn',\n    value: function fadeIn(duration) {\n      return this.each(effects_fadeIn, duration);\n    }\n    /**\n     * Fade out each elements\n     * @see {@link fadeOut}\n     * @param {number} duration\n     * @return {GaspardElements} Gaspard Elements collection\n     */\n\n  }, {\n    key: 'fadeOut',\n    value: function fadeOut(duration) {\n      return this.each(effects_fadeOut, duration);\n    }\n    /**\n     * Hide each elements\n     * @see {@link hide}\n     * @return {GaspardElements} Gaspard Elements collection\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide() {\n      return this.each(effects_hide);\n    }\n    /**\n     * Show each elements\n     * @see {@link show}\n     * @return {GaspardElements} Gaspard Elements collection\n     */\n\n  }, {\n    key: 'show',\n    value: function show() {\n      return this.each(effects_show);\n    }\n    /**\n     * Attach an event handler function for each elements\n     * @see {@link on}\n     * @param {string} eventName\n     * @param {Function} eventHandler\n     * @return {GaspardElements} Gaspard Elements collection\n     */\n\n  }, {\n    key: 'on',\n    value: function on(eventName, eventHandler) {\n      return this.each(events_on, eventName, eventHandler);\n    }\n    /**\n     * Remove an event handler function for each elements\n     * @see {@link off}\n     * @param {string} eventName\n     * @param {Function} eventHandler\n     * @return {GaspardElements} Gaspard Elements collection\n     */\n\n  }, {\n    key: 'off',\n    value: function off(eventName, eventHandler) {\n      return this.each(events_off, eventName, eventHandler);\n    }\n    /**\n     * Execute all handlers to each elements\n     * @see {@link trigger}\n     * @param {string} eventName\n     * @param {Object} data\n     * @return {GaspardElements} Gaspard Elements collection\n     */\n\n  }, {\n    key: 'trigger',\n    value: function trigger(eventName, data) {\n      return this.each(events_trigger, eventName, data);\n    }\n    /**\n     * Return a collection of matched elements either found in the DOM based on passed argument\n     *\n     * @param {string} selector Accepts a string containing a CSS selector which is then used to match a set of elements\n     * @return {GaspardElements} A collection of Gaspard Elements to chain actions\n     */\n\n  }, {\n    key: 'find',\n    value: function find(selector) {\n      return this.elements.map(function (element) {\n        return selectors_find(selector, element);\n      }).filter(function (element) {\n        return element.length || element instanceof Element === true;\n      }).reduce(function (accumulator, element) {\n        return accumulator.concat(element);\n      }, []).reduce(function (accumulator, element) {\n        if (~accumulator.elements.indexOf(element)) {\n          return accumulator;\n        } else {\n          accumulator.elements.push(element);\n          return accumulator;\n        }\n      }, new GaspardElements());\n    }\n  }]);\n\n  return GaspardElements;\n}();\n\n/* harmony default export */ var gaspard_defaultExport = (gaspard_GaspardElements);\n// CONCATENATED MODULE: ./src/positions.js\n/***\n * Positions Module\n * @module positions\n */\n\n/**\n * Get the size of the element and its position relative to the viewport.\n *\n * @param {Element} element A DOM node\n * @return {Object} Object with properties: left, top, right, bottom, x, y, width, height\n */\nfunction viewportPosition(element) {\n  return element.getBoundingClientRect();\n}\n\n/**\n * Get the current coordinates of the element, relative to the document.\n *\n * @param {Element} element A DOM node\n * @return {Object} Contain the properties top and left\n */\nfunction offset(element) {\n  var rect = viewportPosition(element);\n  return {\n    top: rect.top + document.body.scrollTop,\n    left: rect.left + document.body.scrollLeft\n  };\n}\n\n/**\n * Get the current coordinates of the element, relative to the offset parent.\n *\n * @param {Element} element A DOM node\n * @return {Object} Contain the properties top and left\n */\nfunction position(element) {\n  return {\n    left: element.offsetLeft,\n    top: element.offsetTop\n  };\n}\n\n/**\n * Get the current computed outer height (including padding, border, and optionally margin) for the element.\n *\n * @param {Element} element A DOM node\n * @param {boolean} withMargin A Boolean indicating whether to include the element's margin in the calculation.\n * @return {number} Height of the element, including top and bottom padding, border, and optionally margin, in pixels\n */\nfunction outerHeight(element, withMargin) {\n  var height = element.offsetHeight;\n  if (withMargin) {\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop || 0) + parseInt(style.marginBottom || 0);\n  }\n  return height;\n}\n\n/**\n * Get the current computed outer width (including padding, border, and optionally margin) for the element.\n *\n * @param {Element} element A DOM node\n * @param {boolean} withMargin A Boolean indicating whether to include the element's margin in the calculation.\n * @return {number} Width of the element, including left and right padding, border, and optionally margin, in pixels\n */\nfunction outerWidth(element, withMargin) {\n  var width = element.offsetWidth;\n  if (withMargin) {\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft || 0) + parseInt(style.marginRight || 0);\n  }\n  return width;\n}\n// CONCATENATED MODULE: ./src/index.js\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"find\", function() { return selectors_find; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"is\", function() { return is; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"contains\", function() { return contains; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"prev\", function() { return prev; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"next\", function() { return next; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"siblings\", function() { return siblings; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"parent\", function() { return parent; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"hasClass\", function() { return hasClass; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"addClass\", function() { return attributes_addClass; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"removeClass\", function() { return attributes_removeClass; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"toggleClass\", function() { return attributes_toggleClass; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"attr\", function() { return attributes_attr; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"css\", function() { return attributes_css; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"parseHTML\", function() { return parseHTML; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"before\", function() { return content_before; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"after\", function() { return content_after; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"prepend\", function() { return content_prepend; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"append\", function() { return content_append; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"clone\", function() { return clone; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"remove\", function() { return content_remove; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"text\", function() { return content_text; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"html\", function() { return content_html; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"replaceWith\", function() { return content_replaceWith; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"fadeIn\", function() { return effects_fadeIn; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"fadeOut\", function() { return effects_fadeOut; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"hide\", function() { return effects_hide; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"show\", function() { return effects_show; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"viewportPosition\", function() { return viewportPosition; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"offset\", function() { return offset; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"position\", function() { return position; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"outerHeight\", function() { return outerHeight; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"outerWidth\", function() { return outerWidth; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"off\", function() { return events_off; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"on\", function() { return events_on; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"trigger\", function() { return events_trigger; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"documentReady\", function() { return documentReady; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"GaspardElements\", function() { return gaspard_defaultExport; });\n/***\n * index Module\n * @namespace index\n */\n\n\n\n\n\n\n\n\n\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// gaspard.umd.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 28825ceeef08e6424b46","/***\n * Utils Module\n * @module utils\n * @private\n */\n\n/**\n * Transform kebab case string into camel case strings array\n * @private\n *\n * @param {string} kebabCaseString The kebab case string\n * @return {string} The camel case transformed string\n */\nexport function toCamelCase (kebabCaseString) {\n  return kebabCaseString.split('-').reduce((memo, token) => {\n    return memo + token.slice(0, 1).toUpperCase() + token.slice(1)\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/***\n * Attributes Module\n * @module attributes\n */\n\nimport { toCamelCase } from './utils'\n\n/**\n * Filter incorrect class names.\n * @private\n *\n * @param {string} [classNames=''] One or more space-separated classes to be filtered\n * @return {Array} Valid class names array\n */\nfunction getRealClassNamesArray (classNames = '') {\n  return classNames.split(' ').filter(className => !!className)\n}\n\n/**\n * Determine whether the element is assigned the given class.\n *\n * @param {Element} element A DOM node\n * @param {string} className The class name to search for\n * @return {boolean} Result\n */\nexport function hasClass (element, className) {\n  if (element.classList) {\n    return element.classList.contains(className)\n  } else {\n    return !!~element.className.indexOf(className)\n  }\n}\n\n/**\n * Adds the specified class(es) to element.\n *\n * @param {Element} element A DOM node\n * @param {string} classNames One or more space-separated classes to be added to the class attribute\n */\nexport function addClass (element, classNames) {\n  classNames = getRealClassNamesArray(classNames)\n  if (element.classList) {\n    element.classList.add(...classNames)\n  } else {\n    element.className += ' ' + classNames.join(' ')\n  }\n}\n\n/**\n * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\n *\n * @param {Element} element A DOM node\n * @param {string} classNames One or more space-separated classes to be removed to the class attribute\n */\nexport function removeClass (element, classNames) {\n  classNames = getRealClassNamesArray(classNames)\n  if (element.classList) {\n    element.classList.remove(...classNames)\n  } else {\n    element.className = classNames.reduce((accumulator, className) => accumulator.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' '), element.className).trim()\n  }\n}\n\n/**\n * Add or remove one or more classes from element, depending on either the class's presence or the value of the state argument.\n *\n * @param {Element} element A DOM node\n * @param {string} classNames One or more class names (separated by spaces) to be toggled for each element in the matched set\n * @param {boolean} state A Boolean value to determine whether the class should be added or removed\n */\nexport function toggleClass (element, classNames, state) {\n  if (typeof state === 'boolean') {\n    if (state) {\n      addClass(element, classNames)\n    } else {\n      removeClass(element, classNames)\n    }\n  } else {\n    classNames = getRealClassNamesArray(classNames)\n    classNames.forEach(className => hasClass(element, className) ? removeClass(element, className) : addClass(element, className))\n  }\n}\n\n/**\n * Get the value of an attribute for the element\n *\n * @param {Element} element A DOM node\n * @param {string} attribute The name of the attribute to get\n * @return {string} The value of the attribute\n */\n/**\n * Set the value of an attribute for the element.\n *\n * @param {Element} element A DOM node\n * @param {string} attribute The name of the attribute to set\n * @param {string} [value] A value to set for the attribute. If null, the specified attribute will be removed\n */\nexport function attr (element, attribute, value) {\n  if (value !== undefined) {\n    if (value === null) {\n      element.removeAttribute(attribute)\n    } else {\n      element.setAttribute(attribute, value)\n    }\n  } else {\n    return element.getAttribute(attribute)\n  }\n}\n\n/**\n * Get the computed style properties for the element.\n *\n * @param {Element} element A DOM node\n * @param {string} ruleName A CSS property\n * @return {string} The value of the CSS property\n */\n/**\n  * Set a CSS property for the element.\n  *\n  * @param {Element} element A DOM node\n  * @param {string} ruleName A CSS property\n  * @param {string} [value] A value to set for the property\n  */\nexport function css (element, ruleName, value) {\n  if (value !== undefined) {\n    element.style[toCamelCase(ruleName)] = value\n  } else {\n    return getComputedStyle(element)[ruleName]\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/attributes.js","/***\n * Content Module\n * @module content\n */\n\n/**\n * Parses a string into an array of DOM nodes.\n *\n * @param {string} htmlString HTML string to be parsed\n * @return {Element[]} DOM nodes\n */\nexport function parseHTML (htmlString) {\n  const tmp = document.implementation.createHTMLDocument()\n  tmp.body.innerHTML = htmlString\n  return tmp.body.children\n}\n\n/**\n * Insert content, specified by the second parameter, before the element.\n *\n * @param {Element} element A DOM node\n * @param {string} htmlString HTML string to insert\n */\nexport function before (element, htmlString) {\n  element.insertAdjacentHTML('beforebegin', htmlString)\n}\n\n/**\n * Insert content, specified by the second parameter, after the element.\n *\n * @param {Element} element A DOM node\n * @param {string} htmlString HTML string to insert\n */\nexport function after (element, htmlString) {\n  element.insertAdjacentHTML('afterend', htmlString)\n}\n\n/**\n * Insert an element, specified by the second parameter, to the beginning of the parent element.\n *\n * @param {Element} parent Parent DOM element\n * @param {Element} element DOM element to insert\n */\nexport function prepend (parent, element) {\n  parent.insertBefore(element, parent.firstChild)\n}\n\n/**\n * Insert an element, specified by the second parameter, to the end of the parent element.\n *\n * @param {Element} parent Parent DOM element\n * @param {Element} element DOM element to insert\n */\nexport function append (parent, element) {\n  parent.appendChild(element)\n}\n\n/**\n * Create a deep copy of the element.\n *\n * @param {Element} element A DOM node\n * @return {Element} Cloned DOM Element\n */\nexport function clone (element) {\n  return element.cloneNode(true)\n}\n\n/**\n * Remove the element from the DOM\n *\n * @param {Element} element The element to remove\n */\nexport function remove (element) {\n  element.parentNode.removeChild(element)\n}\n\n/**\n * Get the combined text contents of the element, including his descendants.\n *\n * @param {Element} element A DOM node\n * @return {string}\n */\n/**\n  * Set the content of the element to the specified text.\n  *\n  * @param {Element} element A DOM node\n  * @param {string} textString The text to set as the content of the element. When Number or Boolean is supplied, it will be converted to a String representation.\n  */\nexport function text (element, textString) {\n  if (textString !== undefined) {\n    element.textContent = String(textString)\n  } else {\n    return element.textContent\n  }\n}\n\n/**\n * Get the HTML contents of the element.\n *\n * @param {Element} element A DOM node\n * @return {string}\n */\n/**\n  * Set the HTML contents of the element.\n  *\n  * @param {Element} element A DOM node\n  * @param {string} htmlString A string of HTML to set as the content\n  */\nexport function html (element, htmlString) {\n  if (htmlString !== undefined) {\n    element.innerHTML = htmlString\n  } else {\n    return element.innerHTML\n  }\n}\n\n/**\n * Replace element with the provided new content.\n *\n * @param {Element} element A DOM node\n * @param {string} htmlString The HTML string content to insert\n */\nexport function replaceWith (element, htmlString) {\n  element.outerHTML = htmlString\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/content.js","/***\n * Effects Module\n * @module effects\n */\n\n/**\n * Fade in or out the element.\n * @private\n *\n * @param {Element} element A DOM node\n * @param {number} [duration=400] A number determining how long the animation will run\n * @param {boolean} isFadeIn Determine fadeIn or fadeOut\n */\nfunction fade (element, duration = 400, isFadeIn) {\n  element.style.opacity = isFadeIn ? 0 : 1\n\n  let last = +new Date()\n  function tick () {\n    const timeDifference = (new Date() - last) * (isFadeIn ? 1 : -1)\n    element.style.opacity = +element.style.opacity + timeDifference / duration\n    last = +new Date()\n\n    const targetOpacity = isFadeIn ? +element.style.opacity < 1 : +element.style.opacity > 0\n    if (targetOpacity) {\n      (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16)\n    }\n  }\n\n  tick()\n}\n\n/**\n * Display the elements by fading them to opaque.\n *\n * @param {Element} element A DOM node\n * @param {number} [duration=400] A number determining how long the animation will run\n */\nexport function fadeIn (element, duration) {\n  fade(element, duration, true)\n}\n\n/**\n * Hide the element by fading them to transparent.\n *\n * @param {Element} element A DOM node\n * @param {number} [duration=400] A number determining how long the animation will run\n */\nexport function fadeOut (element, duration) {\n  fade(element, duration, false)\n}\n\n/**\n * Hide the element.\n *\n * @param {Element} element A DOM node\n */\nexport function hide (element) {\n  element.style.display = 'none'\n}\n\n/**\n * Show the element.\n *\n * @param {Element} element A DOM node\n */\nexport function show (element) {\n  element.style.display = ''\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/effects.js","/***\n * Events Module\n * @module events\n */\n\n/**\n * Remove an event handler.\n *\n * @param {Element} element A DOM node\n * @param {string} eventName An event type\n * @param {Function} eventHandler A handler function previously attached for the event\n */\nexport function off (element, eventName, eventHandler) {\n  element.removeEventListener(eventName, eventHandler)\n}\n\n/**\n * Attach an event handler function for the element.\n *\n * @param {Element} element A DOM node\n * @param {string} eventName An event type\n * @param {Function} eventHandler A function to execute when the event is triggered\n */\nexport function on (element, eventName, eventHandler) {\n  element.addEventListener(eventName, eventHandler)\n}\n\n/**\n * Execute all handlers and behaviors attached to the element for the given event type.\n *\n * @param {Element} element A DOM node\n * @param {string} eventName An event type\n * @param {Object} [data={}] Additional parameters to pass along to the event handler.\n */\nexport function trigger (element, eventName, data = {}) {\n  const isNativeEvent = !!element['on' + eventName]\n  let event\n  if (window.CustomEvent) {\n    event = new CustomEvent(eventName, { detail: data })\n  } else {\n    event = document.createEvent('CustomEvent')\n    event.initCustomEvent(eventName, true, !isNativeEvent, data)\n  }\n  element.dispatchEvent(event)\n}\n\n/**\n * Specify a function to execute when the DOM is fully loaded.\n *\n * @param {Function} callback A function to execute after the DOM is ready.\n */\nexport function documentReady (callback) {\n  if (document.attachEvent ? document.readyState === 'complete' : document.readyState !== 'loading') {\n    callback()\n  } else {\n    document.addEventListener('DOMContentLoaded', callback)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/events.js","/***\n * Selectors Module\n * @namespace selectors\n */\n\n/**\n * Return a collection of matched elements either found in the DOM based on passed argument\n *\n * @param {string} selector Accepts a string containing a CSS selector which is then used to match a set of elements\n * @param {(HTMLDocument|Element)} [context=document] A DOM Element or Document\n * @return {Array} A collection of DOM Elements\n */\nexport function find (selector, context = document) {\n  if (context instanceof Element === false && context instanceof HTMLDocument === false) {\n    throw new TypeError('You should provide a valid dom node as second argument')\n  }\n  let elements\n  if (/^#[\\w-]*$/.test(selector)) {\n    elements = document.getElementById(selector.substr(1)) || []\n  } else if (/^\\.[\\w-]*$/.test(selector)) {\n    elements = context.getElementsByClassName(selector.slice(1))\n  } else if (/^\\w+$/.test(selector)) {\n    elements = context.getElementsByTagName(selector)\n  } else {\n    elements = context.querySelectorAll(selector)\n  }\n  if (elements.length) {\n    elements = [...elements]\n  }\n  return elements\n}\n\n/**\n * Check the element against a selector or element, and return true if the element match the given argument.\n *\n * @param {Element} element A DOM node\n * @param {(string|Element)} selectorOrElement A string containing a selector expression or a DOM node\n * @return {boolean} Is element match with selectorOrElement\n */\nexport function is (element, selectorOrElement) {\n  if (typeof selectorOrElement === 'string') {\n    return (\n      element.matches ||\n      element.matchesSelector ||\n      element.msMatchesSelector ||\n      element.mozMatchesSelector ||\n      element.webkitMatchesSelector ||\n      element.oMatchesSelector\n    ).call(element, selectorOrElement)\n  } else {\n    return element === selectorOrElement\n  }\n}\n\n/**\n * Check to see if a DOM element is a descendant of another DOM element.\n *\n * @param {Element} element A DOM node\n * @param {Element} child A potential child DOM node\n * @return {boolean} Is element has child as a descendant\n */\nexport function contains (element, child) {\n  return element !== child && element.contains(child)\n}\n\n/**\n * Get the immediately preceding sibling of the element.\n *\n * @param {Element} element A DOM node\n * @return {Element} The previous DOM node\n */\nexport function prev (element) {\n  return element.previousElementSibling\n}\n\n/**\n * Get the immediately following sibling of the element.\n *\n * @param {Element} element A DOM node\n * @return {Element} The following DOM node\n */\nexport function next (element) {\n  return element.nextElementSibling\n}\n\n/**\n * Get the siblings of the element.\n *\n * @param {Element} element A DOM node\n * @return {Array} Siblings DOM nodes\n */\nexport function siblings (element) {\n  return [...element.parentNode.children].filter(child => child !== element)\n}\n\n/**\n * Get the parent of the element.\n *\n * @param {Element} element A DOM node\n * @return {Element} The parent DOM node\n */\nexport function parent (element) {\n  return element.parentNode\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/selectors.js","/***\n * Positions Module\n * @module positions\n */\n\n/**\n * Get the size of the element and its position relative to the viewport.\n *\n * @param {Element} element A DOM node\n * @return {Object} Object with properties: left, top, right, bottom, x, y, width, height\n */\nexport function viewportPosition (element) {\n  return element.getBoundingClientRect()\n}\n\n/**\n * Get the current coordinates of the element, relative to the document.\n *\n * @param {Element} element A DOM node\n * @return {Object} Contain the properties top and left\n */\nexport function offset (element) {\n  const rect = viewportPosition(element)\n  return {\n    top: rect.top + document.body.scrollTop,\n    left: rect.left + document.body.scrollLeft\n  }\n}\n\n/**\n * Get the current coordinates of the element, relative to the offset parent.\n *\n * @param {Element} element A DOM node\n * @return {Object} Contain the properties top and left\n */\nexport function position (element) {\n  return {\n    left: element.offsetLeft,\n    top: element.offsetTop\n  }\n}\n\n/**\n * Get the current computed outer height (including padding, border, and optionally margin) for the element.\n *\n * @param {Element} element A DOM node\n * @param {boolean} withMargin A Boolean indicating whether to include the element's margin in the calculation.\n * @return {number} Height of the element, including top and bottom padding, border, and optionally margin, in pixels\n */\nexport function outerHeight (element, withMargin) {\n  let height = element.offsetHeight\n  if (withMargin) {\n    const style = getComputedStyle(element)\n    height += parseInt(style.marginTop || 0) + parseInt(style.marginBottom || 0)\n  }\n  return height\n}\n\n/**\n * Get the current computed outer width (including padding, border, and optionally margin) for the element.\n *\n * @param {Element} element A DOM node\n * @param {boolean} withMargin A Boolean indicating whether to include the element's margin in the calculation.\n * @return {number} Width of the element, including left and right padding, border, and optionally margin, in pixels\n */\nexport function outerWidth (element, withMargin) {\n  let width = element.offsetWidth\n  if (withMargin) {\n    const style = getComputedStyle(element)\n    width += parseInt(style.marginLeft || 0) + parseInt(style.marginRight || 0)\n  }\n  return width\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/positions.js","/***\n * GaspardElements Module\n * @module gaspardElements\n */\n\nimport { addClass, removeClass, toggleClass, attr, css } from './attributes'\nimport { before, after, prepend, append, remove, text, html, replaceWith } from './content'\nimport { fadeIn, fadeOut, hide, show } from './effects'\nimport { on, off, trigger } from './events'\nimport { find } from './selectors'\n\n/**\n * Use GaspardElements class to perform actions on Elements collection\n *\n * @param {(Element[]|Element|string)} [elements=[]] DOM Elements, Element, or string to query the DOM\n * @return {GaspardElements} Gaspard Elements collection\n */\nexport default class GaspardElements {\n  constructor (elements = []) {\n    let contextElements\n    if (Array.isArray(elements)) {\n      contextElements = elements\n    } else if (typeof elements === 'string') {\n      contextElements = find(elements)\n    } else {\n      contextElements = [elements]\n    }\n    this.elements = [].concat(contextElements)\n  }\n  /**\n   * Apply a method on each elements and return the collection to chain methods\n   * @param {Function} method Accept a method to run on each elements\n   * @param {any} params A list of argument to call the method with\n   * @return {GaspardElements} Gaspard Elements collection\n   */\n  each (method, ...params) {\n    this.elements.forEach(element => method(element, ...params))\n    return this\n  }\n  /**\n   * Add classes to each elements\n   * @see {@link addClass}\n   * @param {string} classNames\n   * @return {GaspardElements} Gaspard Elements collection\n   */\n  addClass (classNames) {\n    return this.each(addClass, classNames)\n  }\n  /**\n   * Toggle classes to each elements\n   * @see {@link toggleClass}\n   * @param {string} classNames\n   * @param {boolean} state\n   * @return {GaspardElements} Gaspard Elements collection\n   */\n  toggleClass (classNames, state) {\n    return this.each(toggleClass, classNames, state)\n  }\n  /**\n   * Remove classes to each elements\n   * @see {@link removeClass}\n   * @param {string} classNames\n   * @return {GaspardElements} Gaspard Elements collection\n   */\n  removeClass (classNames) {\n    return this.each(removeClass, classNames)\n  }\n  /**\n   * Set attribute to each elements\n   * @see {@link attr}\n   * @param {string} attribute\n   * @param {any} value\n   * @return {GaspardElements} Gaspard Elements collection\n   */\n  attr (attribute, value) {\n    return this.each(attr, attribute, value)\n  }\n  /**\n   * Set CSS value to each elements\n   * @see {@link css}\n   * @param {string} ruleName\n   * @param {string} value\n   * @return {GaspardElements} Gaspard Elements collection\n   */\n  css (ruleName, value) {\n    return this.each(css, ruleName, value)\n  }\n  /**\n   * Insert content before each elements\n   * @see {@link before}\n   * @param {string} htmlString\n   * @return {GaspardElements} Gaspard Elements collection\n   */\n  before (htmlString) {\n    return this.each(before, htmlString)\n  }\n  /**\n   * Insert content after each elements\n   * @see {@link after}\n   * @param {string} htmlString\n   * @return {GaspardElements} Gaspard Elements collection\n   */\n  after (htmlString) {\n    return this.each(after, htmlString)\n  }\n  /**\n   * Prepend element to each elements\n   * @see {@link prepend}\n   * @param {Element} element\n   * @return {GaspardElements} Gaspard Elements collection\n   */\n  prepend (element) {\n    return this.each(prepend, element)\n  }\n  /**\n   * Append element to each elements\n   * @see {@link append}\n   * @param {Element} element\n   * @return {GaspardElements} Gaspard Elements collection\n   */\n  append (element) {\n    return this.each(append, element)\n  }\n  /**\n   * Remove each elements\n   * @see {@link remove}\n   * @return {GaspardElements} Gaspard Elements collection\n   */\n  remove () {\n    return this.each(remove)\n  }\n  /**\n   * Set text to each elements\n   * @see {@link text}\n   * @param {string} textString\n   * @return {GaspardElements} Gaspard Elements collection\n   */\n  text (textString) {\n    return this.each(text, textString)\n  }\n  /**\n   * Set html to each elements\n   * @see {@link html}\n   * @param {string} htmlString\n   * @return {GaspardElements} Gaspard Elements collection\n   */\n  html (htmlString) {\n    return this.each(html, htmlString)\n  }\n  /**\n   * Replace each elements\n   * @see {@link replaceWith}\n   * @param {string} htmlString\n   * @return {GaspardElements} Gaspard Elements collection\n   */\n  replaceWith (htmlString) {\n    return this.each(replaceWith, htmlString)\n  }\n  /**\n   * Fade in each elements\n   * @see {@link fadeIn}\n   * @param {number} duration\n   * @return {GaspardElements} Gaspard Elements collection\n   */\n  fadeIn (duration) {\n    return this.each(fadeIn, duration)\n  }\n  /**\n   * Fade out each elements\n   * @see {@link fadeOut}\n   * @param {number} duration\n   * @return {GaspardElements} Gaspard Elements collection\n   */\n  fadeOut (duration) {\n    return this.each(fadeOut, duration)\n  }\n  /**\n   * Hide each elements\n   * @see {@link hide}\n   * @return {GaspardElements} Gaspard Elements collection\n   */\n  hide () {\n    return this.each(hide)\n  }\n  /**\n   * Show each elements\n   * @see {@link show}\n   * @return {GaspardElements} Gaspard Elements collection\n   */\n  show () {\n    return this.each(show)\n  }\n  /**\n   * Attach an event handler function for each elements\n   * @see {@link on}\n   * @param {string} eventName\n   * @param {Function} eventHandler\n   * @return {GaspardElements} Gaspard Elements collection\n   */\n  on (eventName, eventHandler) {\n    return this.each(on, eventName, eventHandler)\n  }\n  /**\n   * Remove an event handler function for each elements\n   * @see {@link off}\n   * @param {string} eventName\n   * @param {Function} eventHandler\n   * @return {GaspardElements} Gaspard Elements collection\n   */\n  off (eventName, eventHandler) {\n    return this.each(off, eventName, eventHandler)\n  }\n  /**\n   * Execute all handlers to each elements\n   * @see {@link trigger}\n   * @param {string} eventName\n   * @param {Object} data\n   * @return {GaspardElements} Gaspard Elements collection\n   */\n  trigger (eventName, data) {\n    return this.each(trigger, eventName, data)\n  }\n  /**\n   * Return a collection of matched elements either found in the DOM based on passed argument\n   *\n   * @param {string} selector Accepts a string containing a CSS selector which is then used to match a set of elements\n   * @return {GaspardElements} A collection of Gaspard Elements to chain actions\n   */\n  find (selector) {\n    return this.elements\n      .map(element => find(selector, element))\n      .filter(element => element.length || element instanceof Element === true)\n      .reduce((accumulator, element) => accumulator.concat(element), [])\n      .reduce((accumulator, element) => {\n        if (~accumulator.elements.indexOf(element)) {\n          return accumulator\n        } else {\n          accumulator.elements.push(element)\n          return accumulator\n        }\n      }, new GaspardElements())\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/gaspard.js","/***\n * index Module\n * @namespace index\n */\n\nimport GaspardElements from './gaspard'\n\nexport { find, is, contains, prev, next, siblings, parent } from './selectors'\nexport { hasClass, addClass, removeClass, toggleClass, attr, css } from './attributes'\nexport { parseHTML, before, after, prepend, append, clone, remove, text, html, replaceWith } from './content'\nexport { fadeIn, fadeOut, hide, show } from './effects'\nexport { viewportPosition, offset, position, outerHeight, outerWidth } from './positions'\nexport { off, on, trigger, documentReady } from './events'\nexport { GaspardElements }\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}